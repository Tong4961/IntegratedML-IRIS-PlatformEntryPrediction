<?xml version="1.0" encoding="UTF-8"?>
<Export generator="IRIS" version="26" zv="IRIS for Windows (x86-64) 2023.1 (Build 235_1U)" ts="2023-07-03 10:33:59">
<Class name="JHSER.Config.DB.MessageNum">
<Super>%Persistent</Super>
<TimeChanged>66653,41427.557036</TimeChanged>
<TimeCreated>66065,61744.605477</TimeCreated>

<Property name="MessageNum">
<Description>
消息数</Description>
<Type>%Integer</Type>
</Property>

<Property name="OutPatientNum">
<Description>
门诊数</Description>
<Type>%Integer</Type>
</Property>

<Property name="ServiceNum">
<Description>
服务数</Description>
<Type>%Integer</Type>
</Property>

<Property name="MesSaveTime">
<Description>
消息保留时间</Description>
<Type>%Integer</Type>
</Property>

<Property name="CpuCores">
<Description>
CPU 核心数</Description>
<Type>%Integer</Type>
</Property>

<Property name="MemorySize">
<Description>
内存大小</Description>
<Type>%Integer</Type>
</Property>

<Property name="HardDiskSize">
<Description>
硬盘大小</Description>
<Type>%Integer</Type>
</Property>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^JHSER.Config.DB.MessageNumD</DataLocation>
<DefaultData>MessageNumDefaultData</DefaultData>
<IdLocation>^JHSER.Config.DB.MessageNumD</IdLocation>
<IndexLocation>^JHSER.Config.DB.MessageNumI</IndexLocation>
<StreamLocation>^JHSER.Config.DB.MessageNumS</StreamLocation>
<ExtentSize>10000</ExtentSize>
<Data name="MessageNumDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>MessageNum</Value>
</Value>
<Value name="3">
<Value>OutPatientNum</Value>
</Value>
<Value name="4">
<Value>ServiceNum</Value>
</Value>
<Value name="5">
<Value>MesSaveTime</Value>
</Value>
<Value name="6">
<Value>CpuCores</Value>
</Value>
<Value name="7">
<Value>MemorySize</Value>
</Value>
<Value name="8">
<Value>HardDiskSize</Value>
</Value>
</Data>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>2</AverageFieldSize>
<Histogram>$lb(.06666666666666666667,0,16,$lb("-10000000000000000000","-10000000000000000000","-10000000000000000000","-10000000000000000000","-10000000000000000000","-10000000000000000000","-10000000000000000000","-10000000000000000000","-10000000000000000000","-10000000000000000000","-10000000000000000000","-10000000000000000000","-10000000000000000000","-10000000000000000000","-10000000000000000000","-10000000000000000000"),$lb(21,21,21,21,21,21,21,21,21,21,21,21,21,21,21),$lb(758198320,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,758198320))</Histogram>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>3.97</AverageFieldSize>
<Histogram>$lb(.06666666666666666667,1,0,$lb(1,667,1334,2001,2668,3335,4002,4669,5336,6003,6670,7336,8002,8668,9334,10000),$lb(0,0,0,1,0,0,1,0,0,1,0,0,1,0,0),$lb(822083584,822083584,909522688,909522688,825439028,825439028,842018865,808464640,909522944,842413624,858993461,858993461,875573298,808464896,909523200,875968057,892547894,892547894,909127731,808465152,909586432,909522736,926102326,926102326,942682162,808464896,909522944,943076920,959656756,959656756,825241648,825241648))</Histogram>
</Property>
<Property name="CpuCores">
<Selectivity>14.2857%</Selectivity>
<AverageFieldSize>3</AverageFieldSize>
<Histogram>$lb(.06666666666666666667,1,0,$lb(1,1,1,2,2,4,4,8,8,16,16,32,32,64,64,64),$lb(1,1,0,1,0,1,0,1,0,2,0,2,0,2,2),$lb(822083584,0,0,0,0,822083584,838860800,0,0,838860800,872415232,0,0,872415232,939524096,0,0,939524096,825622528,0,0,825622528,858914816,0,0,858914816,909377536,0,0,0,0,909377536))</Histogram>
</Property>
<Property name="HardDiskSize">
<Selectivity>12.5000%</Selectivity>
<AverageFieldSize>4</AverageFieldSize>
<Histogram>$lb(.06666666666666666667,1,0,$lb(256,256,512,512,1024,1024,1536,1536,2048,2048,2560,2560,3072,3072,4096,4096),$lb(3,0,3,0,4,1,4,0,4,1,4,0,4,0,4),$lb(842348032,0,0,842348032,892416512,0,0,892416512,825242164,0,0,808596480,892548608,0,0,825570102,842019896,0,0,808728576,892743680,0,0,842348080,858797874,0,0,858797874,875575606,0,0,875575606))</Histogram>
</Property>
<Property name="MemorySize">
<Selectivity>11.1111%</Selectivity>
<AverageFieldSize>3.23</AverageFieldSize>
<Histogram>$lb(.06666666666666666667,1,0,$lb(4,4,8,8,16,24,24,32,32,64,128,128,256,256,512,512),$lb(1,0,1,0,0,2,0,2,0,0,3,0,3,0,3),$lb(872415232,0,0,872415232,939524096,0,0,939524096,825622528,825622528,842268672,0,0,842268672,858914816,0,0,858914816,909377536,909377536,825374720,0,0,825374720,842348032,0,0,842348032,892416512,0,0,892416512))</Histogram>
</Property>
<Property name="MesSaveTime">
<Selectivity>14.2857%</Selectivity>
<AverageFieldSize>2.85</AverageFieldSize>
<Histogram>$lb(.06666666666666666667,1,0,$lb(0,0,0,30,30,60,60,90,90,120,120,150,150,180,180,180),$lb(1,1,0,2,0,2,0,2,0,3,1,3,1,3,3),$lb(805306368,0,0,0,0,805306368,858783744,0,0,858783744,909115392,0,0,909115392,959447040,0,0,959447040,825372672,0,0,842006528,892338176,0,0,892338176,942669824,0,0,0,0,825765888))</Histogram>
</Property>
<Property name="MessageNum">
<Selectivity>1.2346%</Selectivity>
<AverageFieldSize>3</AverageFieldSize>
<Histogram>$lb(.06666666666666666667,1,0,$lb(20,25,31,36,42,47,53,58,63,68,74,79,84,90,95,100),$lb(1,0,1,0,1,0,1,0,1,0,1,0,0,1,0),$lb(842006528,805306368,889192448,842334208,858849280,822083584,905969664,859176960,875692032,838860800,922746880,876019712,892534784,855638016,939524096,892862464,909312000,855638016,939524096,909639680,926154752,872415232,956301312,926482432,942931968,942931968,959447040,805306368,889192448,959774720,825241600,825241600))</Histogram>
</Property>
<Property name="OutPatientNum">
<Selectivity>0.0345%</Selectivity>
<AverageFieldSize>4</AverageFieldSize>
<Histogram>$lb(.06666666666666666667,1,0,$lb(1000,1189,1376,1582,1779,1973,2190,2380,2591,2779,2987,3191,3400,3596,3795,4000),$lb(1,1,1,1,1,0,1,1,1,1,0,1,1,1,0),$lb(825241648,808464384,825768192,825768192,859256320,859256320,892875264,892875264,926365952,926365952,959918848,825833267,842086704,825831424,859320320,859320320,892940544,892940544,926365952,926365952,959985408,842610743,858863921,825831680,875573248,875573248,892941824,892941824,926496000,859257141,875573296,875573296))</Histogram>
</Property>
<Property name="ServiceNum">
<Selectivity>0.4975%</Selectivity>
<AverageFieldSize>3</AverageFieldSize>
<Histogram>$lb(.06666666666666666667,1,0,$lb(50,63,77,90,104,117,130,143,157,170,183,196,209,223,237,250),$lb(0,0,0,0,1,1,1,1,1,1,1,0,1,1,1),$lb(892338176,892338176,909312000,909312000,926351360,926351360,959447040,959447040,825242624,808714240,825688064,825688064,858783744,858783744,875757568,875757568,892796928,892796928,925892608,925892608,942866432,942866432,959840256,825832960,842021120,809041920,842203136,842203136,859242496,859242496,892338176,842346496))</Histogram>
</Property>
<SQLMap name="IDKEY">
<BlockCount>-176</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="JHSER.Config.DB.Server">
<Super>%Persistent</Super>
<TimeChanged>66658,19013.8829133</TimeChanged>
<TimeCreated>66065,61744.605477</TimeCreated>

<Property name="OutPatientNum">
<Description>
门诊数</Description>
<Type>%Integer</Type>
</Property>

<Property name="MessageNum">
<Description>
消息数</Description>
<Type>%Integer</Type>
</Property>

<Property name="ServiceNum">
<Description>
服务数</Description>
<Type>%Integer</Type>
</Property>

<Property name="MesSaveTime">
<Description>
消息保留时间</Description>
<Type>%Integer</Type>
</Property>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^JHSER.Config.DB.ServerD</DataLocation>
<DefaultData>ServerDefaultData</DefaultData>
<IdLocation>^JHSER.Config.DB.ServerD</IdLocation>
<IndexLocation>^JHSER.Config.DB.ServerI</IndexLocation>
<StreamLocation>^JHSER.Config.DB.ServerS</StreamLocation>
<ExtentSize>1</ExtentSize>
<Data name="ServerDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>MessageNum</Value>
</Value>
<Value name="3">
<Value>ServiceNum</Value>
</Value>
<Value name="4">
<Value>MesSaveTime</Value>
</Value>
<Value name="5">
<Value>OutPatientNum</Value>
</Value>
</Data>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>2</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>3</AverageFieldSize>
</Property>
<Property name="MesSaveTime">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>3</AverageFieldSize>
</Property>
<Property name="MessageNum">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>3</AverageFieldSize>
</Property>
<Property name="ServiceNum">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>3</AverageFieldSize>
</Property>
<SQLMap name="IDKEY">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>




<Class name="JHService.Configuration.BP.Predict.Context">
<Description>
This class is generated by the JHService.Configuration.BP.Predict BPL class.
This class should not be edited or modified in any way.
Do not make direct use of this class in your application.</Description>
<ClassType>persistent</ClassType>
<CompileAfter>JHService.Configuration.BP.Predict</CompileAfter>
<IncludeCode/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.BP.Context</Super>
<TimeChanged>66653,63711.4134245</TimeChanged>
<TimeCreated>66653,63711.0017745</TimeCreated>
<GeneratedBy>Ens.BPL.Compiler.CLS</GeneratedBy>

<Property name="JHServiceConfigurationPredictBO">
<Type>Ens.StringResponse</Type>
</Property>

<Method name="OnResponse1">
<Description>
Response Handler for call to JHService.Configuration.PredictBO</Description>
<FormalSpec>process:Ens.BusinessProcess,context:Ens.BP.Context,request:Ens.Request,response:Ens.Response,callrequest:JHService.UTIL.MSG.RequestMsg,callresponse:Ens.StringResponse,callname:%String</FormalSpec>
<Language>objectscript</Language>
<PublicList>process,context</PublicList>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 Set $ZT="Trap",status=$$$OK do {
 Set status=$$$OK,response=callresponse
 If $$$ISERR(status) Quit
 } while (0)
Exit Quit status
Trap Set $ZT="",status=##class(Ens.Util.Error).EnsSystemError("JHService.Configuration.BP.Predict.Thread1","OnResponse1")
 Goto Exit
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DefaultData>ContextDefaultData1</DefaultData>
<Data name="ContextDefaultData1">
<Structure>listnode</Structure>
<Subscript>"Context"</Subscript>
<Value name="1">
<Value>JHServiceConfigurationPredictBO</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="JHService.Configuration.BP.Predict.Thread1">
<Description>
This class is generated by the JHService.Configuration.BP.Predict BPL class.
This class should not be edited or modified in any way.
Do not make direct use of this class in your application.</Description>
<ClassType>persistent</ClassType>
<CompileAfter>JHService.Configuration.BP.Predict</CompileAfter>
<IncludeCode/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.BP.Thread</Super>
<TimeChanged>66653,63711.4404629</TimeChanged>
<TimeCreated>66653,63711.0024947</TimeCreated>
<GeneratedBy>Ens.BPL.Compiler.CLS</GeneratedBy>

<Method name="S1">
<FormalSpec>process:Ens.BusinessProcess,context:Ens.BP.Context,synctimedout:%Boolean,syncresponses:%ArrayOfObjects(ELEMENTTYPE="%Library.Persistent"),request:%Library.Persistent,response:%Library.Persistent</FormalSpec>
<Language>objectscript</Language>
<PublicList>process,context</PublicList>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 Set $ZT="Trap",status=$$$OK do {
 #; --- Begin Call HTTP CALL ---
 #; --- Begin Request ---
 Set callrequest=##class(JHService.UTIL.MSG.RequestMsg).%New()
 If '$IsObject(callrequest) Set status=%objlasterror Quit
 Set status=$$$OK,callrequest=request
 If $$$ISERR(status) Quit
 Set status=..MakeAsyncCall("OnResponse1","JHService.Configuration.PredictBO",callrequest,"HTTP CALL",1,0,"HTTP CALL",1)
 If $$$ISERR(status) Quit
 Kill callrequest
 #; --- End Request ---
 #; --- End Call HTTP CALL ---
 Do ..%PendingResponses.Clear(),..%SyncResponses.Clear()
 Set ..%SyncTimedOut=0,..%PendingTimeout="",..%PendingAlarmHandle="",..%SyncName=""
 If ..%Process.IsResponsePending("HTTP CALL") Do ..%PendingResponses.SetAt("","HTTP CALL")
 If ..%PendingResponses.Count()=0 {
    Set ..%NextState="S3"
 } else {
    Set ..%NextState="S2",..%Wait=1
 }
 } while (0)
Exit Quit ..ManageState(status)
Trap Set $ZT="",status=..ManageStatus(status,"S1") Goto Exit
]]></Implementation>
</Method>

<Method name="S2">
<FormalSpec>process:Ens.BusinessProcess,context:Ens.BP.Context,synctimedout:%Boolean,syncresponses:%ArrayOfObjects(ELEMENTTYPE="%Library.Persistent"),request:%Library.Persistent,response:%Library.Persistent</FormalSpec>
<Language>objectscript</Language>
<PublicList>process,context</PublicList>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 Set $ZT="Trap",status=$$$OK do {
 If ..%PendingResponses.Count()=0 {
    Set ..%NextState="S3"
 } else {
    Set ..%NextState="S2",..%Wait=1
 }
 } while (0)
Exit Quit ..ManageState(status)
Trap Set $ZT="",status=..ManageStatus(status,"S2") Goto Exit
]]></Implementation>
</Method>

<Method name="S3">
<FormalSpec>process:Ens.BusinessProcess,context:Ens.BP.Context,synctimedout:%Boolean,syncresponses:%ArrayOfObjects(ELEMENTTYPE="%Library.Persistent"),request:%Library.Persistent,response:%Library.Persistent</FormalSpec>
<Language>objectscript</Language>
<PublicList>process,context</PublicList>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 Set $ZT="Trap",status=$$$OK do {
 Do process.ClearAllPendingResponses()
 Set ..%NextState="Stop"
 } while (0)
Exit Quit ..ManageState(status)
Trap Set $ZT="",status=..ManageStatus(status,"S3") Goto Exit
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
</Storage>
</Class>


<Class name="JHService.Configuration.BP.Predict">
<Description>
</Description>
<Super>Ens.BusinessProcessBPL</Super>
<TimeChanged>66653,63710.9489675</TimeChanged>
<TimeCreated>66653,63706.5900506</TimeCreated>

<XData name="BPL">
<Description>
BPL Definition</Description>
<XMLNamespace>http://www.intersystems.com/bpl</XMLNamespace>
<Data><![CDATA[
<process language='objectscript' request='Ens.Request' response='Ens.Response' height='2000' width='2000' >
<context>
<property name='JHServiceConfigurationPredictBO' type='Ens.StringResponse' instantiate='0' />
</context>
<sequence xend='200' yend='350' >
<call name='HTTP CALL' target='JHService.Configuration.PredictBO' async='0' xpos='200' ypos='250' >
<request type='JHService.UTIL.MSG.RequestMsg' >
<assign property="callrequest" value="request" action="set" />
</request>
<response type='Ens.StringResponse' >
<assign property="response" value="callresponse" action="set" />
</response>
</call>
</sequence>
</process>
]]></Data>
</XData>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
</Storage>
</Class>


<Class name="JHService.Configuration.PredictBO">
<Super>Ens.BusinessOperation</Super>
<TimeChanged>66658,18211.6425769</TimeChanged>
<TimeCreated>66065,61744.605477</TimeCreated>

<Method name="Send">
<FormalSpec>pRequest:JHService.UTIL.MSG.RequestMsg,*pResponse:Ens.StringResponse</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	
	
	Set pResponse=##class(Ens.StringResponse).%New()
	Set dataArr = ##class(%DynamicArray).%New()
	Set Result =##class(JHService.UTIL.Result.JosnResult).%New()
	try{
		Set url=pRequest.action
		Set request =pRequest.pArg.GetAt(1)
		#Dim json As %DynamicObject =##class(%DynamicObject).%FromJSON(request)
	 	Set tSc=..HTTPSend("127.0.0.1","9097",url,json,.Output)
#;		Set str=Result.SUCCESS(Output,)
		Set str=Output
	}Catch(e){
		Set str=Result.ERROR()
	 	Set tSC=e.AsStatus()
   }
	Set pResponse.StringValue=$REPLACE(str,"\u0000","")
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="HTTPSend">
<FormalSpec>IPAddress:%String,Port:%String,Url:%String,Body:%String,*HttpResponse:%String(MAXLEN=256000)</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	
	Set httpRequest=##class(%Net.HttpRequest).%New()
    Set httpRequest.Port=Port
    Set httpRequest.Server=IPAddress
    Set httpRequest.ContentType="application/json"
    Set httpRequest.Https=0
    Set httpRequest.Timeout=600
    Set httpRequest.ContentCharset="UTF-8"
    d httpRequest.EntityBody.Write(Body)
    Set status=httpRequest.Post(Url)
    IF 'status {
	    Set HttpResponse = "连接失败，调用异常"
	    return "连接失败，调用异常："_$SYSTEM.Status.GetErrorText(status)
	}
    Set response = httpRequest.HttpResponse
    Set ResponseData = response.Data
    Set HttpResponse=""
    while 'ResponseData.AtEnd{
	    Set HttpResponse=HttpResponse_ResponseData.Read()
    }
    ;Set ^LogM($ZDT($NOW(),3,,6))="HttpResponse截取 :"_$p(HttpResponse,"url",2)

    return $$$OK
]]></Implementation>
</Method>

<XData name="MessageMap">
<Data><![CDATA[
<MapItems>
	<MapItem MessageType="JHService.UTIL.MSG.RequestMsg"> 
		<Method>Send</Method>
	</MapItem>
</MapItems>
]]></Data>
</XData>
</Class>


<Class name="JHService.Configuration.PredictBS">
<Super>Ens.BusinessService</Super>
<TimeChanged>66654,57756.784546</TimeChanged>
<TimeCreated>66065,61744.605477</TimeCreated>

<Parameter name="ADAPTER">
<Default>EnsLib.HTTP.InboundAdapter</Default>
</Parameter>

<Property name="Adapter">
<Type>EnsLib.HTTP.InboundAdapter</Type>
</Property>

<Parameter name="SETTINGS">
<Default><![CDATA[TargetConfigNames:Basic:selector?context={Ens.ContextSearch/ProductionItems?targets=1&productionName=@productionId}]]></Default>
</Parameter>

<Property name="TargetConfigNames">
<Description>
Name of the target component receiving the message</Description>
<Type>Ens.DataType.ConfigName</Type>
</Property>

<Method name="OnProcessInput">
<FormalSpec>pInput:%CharacterStream,*pOutput:%CharacterStream</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set pOutput=##class(%Library.GlobalCharacterStream).%New()
	Set Str=""
	Try{
		If ""=..TargetConfigNames{$$$LOGWARNING("The service configuration prediction did not select a target name to receive messages. Please check the BS frontend settings properties ")}
		Set Request=##class(JHService.UTIL.MSG.RequestMsg).%New()
		Set url=pInput.Attributes("URL")
		$$$LOGINFO("url: "_url)
		Set connect=pInput.Read()
		$$$LOGINFO("pram"_connect)
		Set Request.action=url
		Set tSC=Request.pArg.Insert(connect) 
		Set tSC=..SendRequestSync(..TargetConfigNames,Request,.Output)
		Set Str=Output.StringValue
	 }Catch(e){
		Set Str=e.DisplayString()		 
		$$$LOGERROR("ERROR: "_Str)
	 }
	Set status=pOutput.Write(Str)
	Quit $$$OK
]]></Implementation>
</Method>
</Class>


<Class name="JHService.UTIL.MSG.RequestMsg">
<Super>Ens.Request</Super>
<TimeChanged>66653,61249.6364823</TimeChanged>
<TimeCreated>66065,61744.605477</TimeCreated>

<Parameter name="XMLNAME">
<Default>REQUEST</Default>
</Parameter>

<Property name="action">
<Description>
事件名称</Description>
<Type>%String</Type>
<Parameter name="XMLNAME" value="ACTION"/>
</Property>

<Property name="method">
<Description>
方法名称</Description>
<Type>%String</Type>
<Parameter name="XMLNAME" value="METHOD"/>
</Property>

<Property name="pArg">
<Description>
消息的多个参数</Description>
<Type>%String</Type>
<Collection>list</Collection>
<Parameter name="MAXLEN"/>
<Parameter name="XMLNAME" value="PARG"/>
<Parameter name="XMLPROJECTION" value="element"/>
</Property>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DefaultData>RequestMsgDefaultData</DefaultData>
<Data name="RequestMsgDefaultData">
<Structure>listnode</Structure>
<Subscript>"RequestMsg"</Subscript>
<Value name="1">
<Value>action</Value>
</Value>
<Value name="2">
<Value>method</Value>
</Value>
<Value name="3">
<Value>pArg</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="JHService.UTIL.Result.JosnResult">
<Super>%RegisteredObject</Super>
<TimeChanged>66653,63259.0789059</TimeChanged>
<TimeCreated>66065,61744.605477</TimeCreated>

<Method name="SUCCESS">
<Description>
正确响应</Description>
<FormalSpec>data:%String,msg:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

	Set jsonObject = ##class(%DynamicObject).%New()
	Set jsonObject.code="200"
	Set jsonObject.data=data
	Set jsonObject=jsonObject.%Set("success",1,"boolean")
	Set:$L(msg)'=0 jsonObject.msg=msg
	Set pResponse=##class(Ens.StringResponse).%New()
	Set pResponse=jsonObject.%ToJSON()
	Quit pResponse
]]></Implementation>
</Method>

<Method name="ERROR">
<Description>
错误响应</Description>
<FormalSpec>msg:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set jsonObject = ##class(%DynamicObject).%New()
	Set jsonObject.code="-1"
	Set jsonObject=jsonObject.%Set("success",0,"boolean")
	Set jsonObject.msg="暂无数据"
	Set:$L(msg)'=0 jsonObject.msg=msg
	Set pResponse=##class(Ens.StringResponse).%New()
	Set pResponse=jsonObject.%ToJSON()
	Quit pResponse
]]></Implementation>
</Method>

<Method name="WARNING">
<Description>
警告</Description>
<FormalSpec>msg:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set jsonObject = ##class(%DynamicObject).%New()
	Set jsonObject.code="400"
	Set jsonObject=jsonObject.%Set("success",0,"boolean")
	Set jsonObject.msg="无效操作"
	Set:$L(msg)'=0 jsonObject.msg=msg
	Set pResponse=##class(Ens.StringResponse).%New()
	Set pResponse=jsonObject.%ToJSON()
	Quit pResponse
]]></Implementation>
</Method>

<Method name="Result">
<Description><![CDATA[
自定义返回  success: 1 --> true    0 --> false]]></Description>
<FormalSpec>code:%String,data:%String,success:%String,msg:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set jsonObject = ##class(%DynamicObject).%New()
	Set jsonObject.code=code
	Set jsonObject.data=data
	Set jsonObject=jsonObject.%Set("success",success,"boolean")
	Set:$L(msg)'=0 jsonObject.msg=msg
	Set pResponse=##class(Ens.StringResponse).%New()
	Set pResponse=jsonObject.%ToJSON()
	Quit pResponse
]]></Implementation>
</Method>
</Class>




<Class name="MLPKG.FoundationProduction">
<ProcedureBlock>0</ProcedureBlock>
<Super>Ens.Production</Super>
<TimeChanged>66658,21160.3180863</TimeChanged>
<TimeCreated>66653,40755.8255502</TimeCreated>

<XData name="ProductionDefinition">
<Data><![CDATA[
<Production Name="MLPKG.FoundationProduction" TestingEnabled="true" LogGeneralTraceEvents="false">
  <Description></Description>
  <ActorPoolSize>10</ActorPoolSize>
  <Item Name="JHService.Configuration.PredictBS" Category="" ClassName="JHService.Configuration.PredictBS" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="true" Schedule="">
    <Setting Target="Host" Name="TargetConfigNames">JHService.Configuration.BP.Predict</Setting>
    <Setting Target="Adapter" Name="AllowedIPAddresses"></Setting>
    <Setting Target="Adapter" Name="StayConnected">0</Setting>
    <Setting Target="Host" Name="OverrideClientResponseWaitTimeout">15</Setting>
    <Setting Target="Adapter" Name="Charset">utf-8</Setting>
    <Setting Target="Adapter" Name="Port">9090</Setting>
  </Item>
  <Item Name="JHService.Configuration.PredictBO" Category="" ClassName="JHService.Configuration.PredictBO" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="true" Schedule="">
  </Item>
  <Item Name="JHService.Configuration.BP.Predict" Category="" ClassName="JHService.Configuration.BP.Predict" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
  </Item>
</Production>
]]></Data>
</XData>
</Class>


</Export>
